.MarkdownBody code {
  color: var(--gray-text);
  font-size: var(--code-size);
}

.MarkdownBody pre,
.MarkdownBody code {
  font-family: var(--monospace-font);
}

/* Reduce line height for box drawing characters */
.MarkdownBody pre.-box-chars {
  line-height: 1.32;
}

/* For figlet.md */
.MarkdownBody pre.-figlet {
  line-height: 1;
  font-size: 11px;
}

/*
 * Undo prism theme crap
 */

.MarkdownBody {
  & pre {
    box-shadow: none;
    border-left: 0;
    overflow: hidden;
    overflow-x: auto;
    background: white;
    font-size: var(--code-size);
    line-height: var(--code-line-height);
  }

  & pre.-wrap {
    white-space: pre-wrap;
  }

  & pre > code {
    color: var(--base-bold);
    max-height: auto;
    padding: 0;
    background: transparent;
    overflow: visible;
    font-size: 1em;
  }

  /* Line highlight */
  & .line-highlight {
    transform: translate3d(0, 2px, 0);
    background: linear-gradient(
      to right,
      color(var(--base-c) alpha(5%)),
      transparent
    );
  }

  /* Line highlight ranges */
  & .line-highlight[data-end] {
    margin-top: 0;
  }

  /* Number display */
  & .line-highlight::before,
  & .line-highlight::after {
    display: none;
  }
}

.MarkdownBody pre.-setup,
.MarkdownBody p.-setup,
.MarkdownBody ul.-setup,
.MarkdownBody p.-crosslink {
  background: var(--gray-bg);
}

/*
 * Syntax highlight
 */

:root {
  --syntax-a: var(--base-b);
  --syntax-a3: color(var(--syntax-a) lightness(+8%) hue(-10deg));
  --syntax-a7: color(var(--syntax-a) lightness(-8%) hue(+10deg));

  --syntax-b: var(--base-c);
  --syntax-b3: color(var(--syntax-b) lightness(+8%) hue(-10deg));
  --syntax-b7: color(var(--syntax-b) lightness(-8%) hue(+10deg));

  --syntax-m: #aaaaaa;
}

.token {
  &.tag,
  &.keyword {
    color: var(--syntax-a);
  }

  &.tag {
    color: var(--syntax-a7);
  }

  &.value,
  &.string,
  &.number,
  &.attr-value,
  &.boolean,
  &.regex {
    color: var(--syntax-b);
  }

  &.function,
  &.attr-name {
    color: var(--syntax-a3);
  }

  &.comment,
  &.punctuation,
  &.operator {
    color: var(--syntax-m);
  }
}
